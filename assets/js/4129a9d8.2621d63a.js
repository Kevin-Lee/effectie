(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{102:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),c=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function f(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,c=function(e,t){if(null==e)return{};var n,r,c={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var l=c.a.createContext({}),s=function(e){var t=c.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):f(f({},t),e)),n},u=function(e){var t=s(e.components);return c.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},m=c.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,d=u["".concat(a,".").concat(m)]||u[m]||p[m]||o;return n?c.a.createElement(d,f(f({ref:t},l),{},{components:n})):c.a.createElement(d,f({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=m;var f={};for(var i in t)hasOwnProperty.call(t,i)&&(f[i]=t[i]);f.originalType=e,f.mdxType="string"==typeof e?e:r,a[1]=f;for(var l=2;l<o;l++)a[l]=n[l];return c.a.createElement.apply(null,a)}return c.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},75:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return f})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return s}));var r=n(3),c=n(8),o=(n(0),n(102)),a={layout:"docs",title:"EffectConstructor"},f={unversionedId:"scalaz-effect/effect-constructor",id:"scalaz-effect/effect-constructor",isDocsHomePage:!1,title:"EffectConstructor",description:"EffectConstructor",source:"@site/../generated-docs/target/mdoc/scalaz-effect/effect-constructor.md",sourceDirName:"scalaz-effect",slug:"/scalaz-effect/effect-constructor",permalink:"/docs/scalaz-effect/effect-constructor",version:"current",frontMatter:{layout:"docs",title:"EffectConstructor"},sidebar:"someSidebar",previous:{title:"For Scalaz Effect",permalink:"/docs/scalaz-effect/scalaz-effect"},next:{title:"CanCatch",permalink:"/docs/scalaz-effect/can-catch"}},i=[{value:"EffectConstructor",id:"effectconstructor",children:[]},{value:"Effectful",id:"effectful",children:[]}],l={toc:i};function s(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"effectconstructor"},"EffectConstructor"),Object(o.b)("p",null,"If you use Scalaz Effect and write tagless final code, and look for a generic way to construct ",Object(o.b)("inlineCode",{parentName:"p"},"F[A]"),", ",Object(o.b)("inlineCode",{parentName:"p"},"EffectConstructor")," can help you."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-scala"},"import effectie.scalaz._\n\ntrait Something[F[_]] {\n  def get[A](a: => A): F[A]\n}\n\nobject Something {\n  def apply[F[_]: Something]: Something[F] =\n    implicitly[Something[F]]\n\n  implicit def something[F[_]: EffectConstructor]: Something[F] =\n    new SomethingF[F]\n\n  final class SomethingF[F[_]: EffectConstructor]\n    extends Something[F] {\n\n    def get[A](a: => A): F[A] =\n      EffectConstructor[F].effectOf(a)\n  }\n}\n\nimport scalaz.effect._\n\nval get1 = Something[IO].get(1)\n// get1: IO[Int] = scalaz.effect.IO$$anon$7@63c3db1f\n\nget1.unsafePerformIO()\n// res1: Int = 1\n")),Object(o.b)("p",null,"If you feel it's too cumbersome to repeat ",Object(o.b)("inlineCode",{parentName:"p"},"EffectConstructor[F].effectOf()"),", consider using ",Object(o.b)("a",{parentName:"p",href:"#effectful"},"Effectful")),Object(o.b)("h2",{id:"effectful"},"Effectful"),Object(o.b)("p",null,"If you're sick of repeating ",Object(o.b)("inlineCode",{parentName:"p"},"EffectConstructor[F].effectOf()")," and looking for more convenient ways?, use ",Object(o.b)("inlineCode",{parentName:"p"},"Effectful")," instead."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-scala"},"import effectie.scalaz.Effectful._\nimport effectie.scalaz._\n\ntrait Something[F[_]] {\n  def get[A](a: => A): F[A]\n}\n\nobject Something {\n  def apply[F[_]: Something]: Something[F] =\n    implicitly[Something[F]]\n\n  implicit def something[F[_]: EffectConstructor]: Something[F] =\n    new SomethingF[F]\n\n  final class SomethingF[F[_]: EffectConstructor]\n    extends Something[F] {\n\n    def get[A](a: => A): F[A] =\n      effectOf(a)\n      // No more EffectConstructor[F].effectOf(a)\n  }\n}\n\nimport scalaz.effect._\n\nval get1 = Something[IO].get(1)\n// get1: IO[Int] = scalaz.effect.IO$$anon$7@340f685c\n\nget1.unsafePerformIO()\n// res3: Int = 1\n")))}s.isMDXComponent=!0}}]);