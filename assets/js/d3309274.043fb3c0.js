(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{102:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return g}));var n=r(0),i=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function f(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=i.a.createContext({}),u=function(e){var t=i.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=u(e.components);return i.a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,a=e.parentName,p=f(e,["components","mdxType","originalType","parentName"]),l=u(r),m=n,g=l["".concat(a,".").concat(m)]||l[m]||s[m]||o;return r?i.a.createElement(g,c(c({ref:t},p),{},{components:r})):i.a.createElement(g,c({ref:t},p))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,a=new Array(o);a[0]=m;var c={};for(var f in t)hasOwnProperty.call(t,f)&&(c[f]=t[f]);c.originalType=e,c.mdxType="string"==typeof e?e:n,a[1]=c;for(var p=2;p<o;p++)a[p]=r[p];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},92:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return a})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return f})),r.d(t,"default",(function(){return u}));var n=r(3),i=r(8),o=(r(0),r(102)),a={layout:"docs",title:"EitherTSupport"},c={unversionedId:"scalaz-effect/eithert-support",id:"scalaz-effect/eithert-support",isDocsHomePage:!1,title:"EitherTSupport",description:"EitherTSupport",source:"@site/../generated-docs/target/mdoc/scalaz-effect/eithert-support.md",sourceDirName:"scalaz-effect",slug:"/scalaz-effect/eithert-support",permalink:"/docs/scalaz-effect/eithert-support",version:"current",frontMatter:{layout:"docs",title:"EitherTSupport"},sidebar:"someSidebar",previous:{title:"OptionTSupport",permalink:"/docs/scalaz-effect/optiont-support"},next:{title:"ConsoleEffect",permalink:"/docs/scalaz-effect/console-effect"}},f=[{value:"EitherTSupport",id:"eithertsupport",children:[]}],p={toc:f};function u(e){var t=e.components,r=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"eithertsupport"},"EitherTSupport"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-scala"},'import scalaz._\nimport Scalaz._\n\nimport effectie.scalaz.Effectful._\nimport effectie.scalaz._\nimport effectie.scalaz.EitherTSupport._\n\ntrait Something[F[_]] {\n  def foo(a: Int): F[String \\/ Int]\n  def bar(a: String \\/ Int): F[String \\/ Int]\n}\n\nobject Something {\n  def apply[F[_]: Something]: Something[F] =\n    implicitly[Something[F]]\n\n  implicit def something[F[_]: EffectConstructor: Monad]: Something[F] =\n    new SomethingF[F]\n\n  final class SomethingF[F[_]: EffectConstructor: Monad]\n    extends Something[F] {\n\n    def foo(a: Int): F[String \\/ Int] = (for {\n      x <- eitherTRightPure(a) // == EitherT(pureOf(a).map(_.right[String]))\n      y <- eitherTRight(x + 10) // == EitherT(effectOf(x + 10).map(_.right[String]))\n      y2 <- if (y > 100)\n          eitherTLeft[Int]("Error - Bigger than 100")\n        else\n          eitherTRightPure[String](y)\n        // \u2191 if (y > 100)\n        //     EitherT(effectOf("Error - Bigger than 100").map(_.left[Int]))\n        //   else\n        //     EitherT(pureOf(y).map(_.right[String]))\n      z <- eitherTRightF[String](effectOf(y2 + 100)) // == EitherT(effectOf(y + 100).map(_.right))\n    } yield z).run\n\n    def bar(a: String \\/ Int): F[String \\/ Int] = (for {\n      x <- eitherTOfPure(a) // == EitherT(pureOf(a: String \\/ Int))\n      y <- eitherTOf((x + 999).right[String])  // == EitherT(effectOf((x + 999).right[String]))\n    } yield y).run\n  }\n\n}\n\nimport scalaz.effect._\n\nSomething[IO].foo(1).unsafePerformIO()\n// res1: String \\/ Int = \\/-(b = 111)\nSomething[IO].foo(10).unsafePerformIO()\n// res2: String \\/ Int = \\/-(b = 120)\n\nSomething[IO].bar(1.right[String]).unsafePerformIO()\n// res3: String \\/ Int = \\/-(b = 1000)\nSomething[IO].bar("No number".left[Int]).unsafePerformIO()\n// res4: String \\/ Int = -\\/(a = "No number")\n')))}u.isMDXComponent=!0}}]);