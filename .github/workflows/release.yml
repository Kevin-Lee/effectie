name: Release

on:
  push:
    tags:
      - '*'

env:
  SCALA_BINARY_VERSION: "2.13"
  GH_JAVA_VERSION: "adopt@1.11"


jobs:
  gh-release:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ env.GH_JAVA_VERSION }}

    - name: Cache SBT
      uses: actions/cache@v2
      with:
        path: |
          ~/.ivy2/cache
          ~/.cache/coursier
          ~/.sbt
        key: ${{ runner.os }}-sbt-${{ env.SCALA_BINARY_VERSION }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
        restore-keys: |
          ${{ runner.os }}-sbt-${{ env.SCALA_BINARY_VERSION }}-

    - name: sbt GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_AUTH_TOKEN_GITHUB }}
      run: |
        echo "Run] sbt GitHub release"
        echo 'sbt -J-Xmx2048m devOopsGitHubRelease'
        sbt \
          -J-Xmx2048m \
          devOopsGitHubRelease

  publish:
    needs: gh-release

    runs-on: ubuntu-latest

    strategy:
      matrix:
        scala:
          - { name: "Scala 2", version: "2.11.12",    binary-version: "2.11",      java-version: "adopt@1.8"  }
          - { name: "Scala 2", version: "2.12.13",    binary-version: "2.12",      java-version: "adopt@1.11" }
          - { name: "Scala 2", version: "2.13.5",     binary-version: "2.13",      java-version: "adopt@1.11" }
          - { name: "Scala 3", version: "3.0.0-RC1",  binary-version: "3.0.0-RC1", java-version: "adopt@1.11" }
          - { name: "Scala 3", version: "3.0.0-RC2",  binary-version: "3.0.0-RC2", java-version: "adopt@1.11" }

    steps:
      - uses: actions/checkout@v2.3.4
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.scala.java-version }}

      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.cache/coursier
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-sbt-${{ matrix.scala.binary-version }}-

      - name: "sbt GitHub Release - Upload Artifacts for ${{ matrix.scala.name }} ${{ matrix.scala.version }} - ${{ github.run_number }}"
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_AUTH_TOKEN_GITHUB }}
          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          BINTRAY_PASS: ${{ secrets.BINTRAY_PASS }}
        run: |
          echo "Run] Publish: sbt GitHub release - upload artifacts and publish for for Scala ${{ matrix.scala.version }}"
          echo "mkdir -p dotty-docs"
          mkdir -p dotty-docs
          export SOURCE_DATE_EPOCH=$(date +%s)
          echo "SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH"
          echo 'sbt -J-Xmx2048m clean test packagedArtifacts devOopsGitHubReleaseUploadArtifacts publish'
          sbt \
            -J-Xmx2048m \
            ++${{ matrix.scala.version }}! \
            clean \
            test \
            packagedArtifacts \
            devOopsGitHubReleaseUploadArtifacts \
            publish


  publish_maven:
    needs: publish
    if: startsWith(github.ref, 'refs/tags/v')

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Sync to Maven Central
        env:
          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          BINTRAY_PASS: ${{ secrets.BINTRAY_PASS }}
        run: |
          export GITHUB_TAG=${GITHUB_REF#refs/tags/}
          .github/workflows/maven_central_sync.sh
